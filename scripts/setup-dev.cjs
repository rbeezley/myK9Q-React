#!/usr/bin/env node

/**
 * Development Environment Setup Script
 * Helps developers set up the environment variables correctly
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('🚀 myK9Show Development Setup');
console.log('================================\n');

const envLocalPath = path.join(process.cwd(), '.env.local');
const envExamplePath = path.join(process.cwd(), '.env.local.example');

// Check if .env.local already exists
if (fs.existsSync(envLocalPath)) {
  console.log('✅ .env.local already exists!');
  console.log('📝 Current configuration:');
  
  try {
    const envContent = fs.readFileSync(envLocalPath, 'utf8');
    const lines = envContent.split('\n').filter(line => line.trim() && !line.startsWith('#'));
    
    lines.forEach(line => {
      const [key, value] = line.split('=');
      if (key && value) {
        const maskedValue = value.length > 10 
          ? value.substring(0, 10) + '...' 
          : '[set]';
        console.log(`   ${key}=${maskedValue}`);
      }
    });
    
    console.log('\n🎯 If you need to update values, edit .env.local directly');
    console.log('🔄 Remember to restart the dev server after changes: npm run dev');
  } catch (error) {
    console.log('❌ Error reading .env.local:', error.message);
  }
  
  rl.close();
  process.exit(0);
}

// Create .env.local from template
if (!fs.existsSync(envExamplePath)) {
  console.log('❌ .env.local.example not found!');
  console.log('📁 Make sure you\'re in the project root directory');
  rl.close();
  process.exit(1);
}

console.log('📋 Setting up environment variables...\n');
console.log('🔗 You\'ll need your Supabase project credentials:');
console.log('   1. Go to https://app.supabase.com/projects');
console.log('   2. Select your project');
console.log('   3. Go to Settings > API');
console.log('   4. Copy the Project URL and anon key\n');

rl.question('📍 Enter your Supabase Project URL: ', (supabaseUrl) => {
  if (!supabaseUrl.includes('supabase.co')) {
    console.log('⚠️  URL should look like: https://your-project-id.supabase.co');
  }
  
  rl.question('🔑 Enter your Supabase anon key: ', (supabaseKey) => {
    if (supabaseKey.length < 100) {
      console.log('⚠️  Key seems short. Make sure you copied the full anon/public key.');
    }
    
    // Create .env.local content
    const envContent = `# myK9Show - Supabase Configuration
# Generated by setup script on ${new Date().toISOString()}

# Supabase Project Configuration
VITE_SUPABASE_URL=${supabaseUrl.trim()}
VITE_SUPABASE_ANON_KEY=${supabaseKey.trim()}

# Environment
VITE_ENVIRONMENT=development
`;

    try {
      fs.writeFileSync(envLocalPath, envContent);
      console.log('\n✅ .env.local created successfully!');
      console.log('🚀 You can now run: npm run dev');
      console.log('🌐 The login page should work correctly now');
      console.log('\n💡 Pro tip: .env.local is gitignored for security');
    } catch (error) {
      console.log('\n❌ Error creating .env.local:', error.message);
    }
    
    rl.close();
  });
});